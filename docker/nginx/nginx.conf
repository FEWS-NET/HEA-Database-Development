user  nginx;

worker_processes                  $NGINX_WORKER_PROCESSES;
worker_rlimit_nofile              4096;  # `ulimit -Hn` on host, change if necessary

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  multi_accept                    on;
  worker_connections              1024;  # `ulimit -n` on host, change if necessary
  use                             epoll;
}

http {

  # Hide nginx version information.
  server_tokens off;

  # Specify MIME types for files.
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Update charset_types to match updated mime.types.
  # text/html is always included by charset module.
  charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;

  log_format fluentd_json '{ "time": "$time_iso8601", '
    '"remote_addr": "$remote_addr", '
    '"remote_user": "$remote_user", '
    '"request": "$request", '
    '"request_method": "$request_method", '
    '"status": "$status", '
    '"body_bytes_sent": "$body_bytes_sent", '
    '"request_time": "$request_time", '
    '"http_user_agent": "$http_user_agent", '
    '"http_referrer": "$http_referer", '
    '"x_forwarded_for": "$http_x_forwarded_for" }';

  access_log /var/log/nginx/access.log fluentd_json;

  # How long to allow each connection to stay idle.
  # Longer values are better for each individual client, particularly for SSL,
  # but means that worker connections are tied up longer.
  keepalive_timeout 20s;

  # Speed up file transfers by using sendfile() to copy directly
  # between descriptors rather than using read()/write().
  # For performance reasons, on FreeBSD systems w/ ZFS
  # this option should be disabled as ZFS's ARC caches
  # frequently used files in RAM by default.
  sendfile        on;

  # Don't send out partial frames; this increases throughput
  # since TCP frames are filled up before being sent out.
  tcp_nopush      on;

  # Enable gzip compression.
  gzip on;

  # Compression level (1-9).
  # 5 is a perfect compromise between size and CPU usage, offering about
  # 75% reduction for most ASCII files (almost identical to level 9).
  gzip_comp_level    5;

  # Don't compress anything that's already small and unlikely to shrink much
  # if at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  gzip_min_length    256;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  gzip_proxied       any;

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  gzip_vary          on;

  # Compress all output labeled with one of the following MIME-types.
  gzip_types
    application/atom+xml
    application/csv
    application/ecmascript
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-javascript
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/csv
    text/javascript
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy
    text/xml;
  # text/html is always compressed by gzip module

  # This should be turned on if you are going to have pre-compressed copies (.gz) of
  # static files available. If not it should be left off as it will cause extra I/O
  # for the check. It is best if you enable this in a location{} block for
  # a specific directory, or on an individual server{} level. Note that it doesn't
  # need to be turned on if the pre-compressed files will always be served using a
  # URI that references the compressed version
  # gzip_static on;

  server {
    listen 80;
    server_name _;

    location $MAYAN_URL_PREFIX {
        proxy_pass $MAYAN_BACKEND;
        proxy_redirect     off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto $http_x_forwarded_proto;

        client_max_body_size 100M;  # Increase if you plan to upload larger documents
        proxy_connect_timeout 5s;
        proxy_read_timeout 180s;  # Increase if necessary for larger documents

    }

    location ~ ^/luigid/?$ {
        return 302 /luigid/static/visualiser/index.html;
    }

    # Note that the trailiing / on location and proxy_pass are required to make Nginx remove the /luigid prefix
    location /luigid/ {
        proxy_pass $LUIGID_BACKEND/;
        proxy_redirect     default;
        sub_filter "/static/visualiser/"  "/luigid/static/visualiser/";
        sub_filter "/history/"  "/luigid/history/";
        sub_filter_once off;
        proxy_http_version 1.1;
        # Force text responses from backend to enable sub_filter to work
        proxy_set_header Accept-Encoding "";
        proxy_set_header Connection "";
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto $http_x_forwarded_proto;
    }

    location /api {
        proxy_pass $API_BACKEND;
        proxy_redirect     off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto $http_x_forwarded_proto;

        client_max_body_size 80M;
        proxy_connect_timeout 5s;
        proxy_read_timeout $NGINX_API_PROXY_READ_TIMEOUT;  # Must match the Gunicorn --timeout value; must be long enough to support a full extract

    }

    location / {
        proxy_pass $APP_BACKEND;
        proxy_redirect     off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto $http_x_forwarded_proto;

        client_max_body_size 80M;
        proxy_connect_timeout 5s;
        proxy_read_timeout $NGINX_APP_PROXY_READ_TIMEOUT;  # Must match the Gunicorn --timeout value
    }
  }
}
