CLIENT=fnt
APP=hea
ENV=lcl
THEME=hea_default
DJANGO_SETTINGS_MODULE=${APP}.settings.local
DOMAIN=${APP}lcl.localdomain,${APP}lcl,localhost,127.0.0.1,host.docker.internal
SECRET_KEY='viw11es#4b&0mmi380*9955oy2xx43'
POSTGRES_PASSWORD=gucci
PGHOST=db  # change to localhost if using a local database
PGPORT=5432
PGUSER=${CLIENT}${APP}${ENV}
PGPASSWORD=${POSTGRES_PASSWORD}
PGDATABASE=${PGUSER}
DATABASE_URL=postgis://${PGUSER}:${PGPASSWORD}@${PGHOST}:${PGPORT}/${PGDATABASE}
DAGSTER_PGUSER=${CLIENT}hdg${ENV}
DAGSTER_PGPASSWORD=${PGPASSWORD}
DAGSTER_HOME=/usr/src/app  # change to /home/<username>/git/hea for a local development environment
DAGSTER_WEBSERVER_URL=http://dagster_webserver:3000
DAGSTER_WEBSERVER_PREFIX=pipelines
DAGSTER_S3_BUCKET=${CLIENT}-${APP}-${ENV}  # Used by S3ComputeLogManager
DAGSTER_S3_PREFIX=/pipelines/storage
DAGSTER_S3_LOG_PATH=${DAGSTER_S3_PREFIX}/runs
# change to media/pipelines/storage/assets for a local development environment,
# or if using minio set AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY and AWS_ENDPOINT_URL_S3 to the minio values below.
DAGSTER_ASSET_BASE_PATH=s3://${DAGSTER_S3_BUCKET}${DAGSTER_S3_PREFIX}/assets
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadminpassword
MINIO_ENDPOINT_URL=http://minio:9000  # change to http://localhost:9000 if using a local environment
SUPPORT_EMAIL_ADDRESS=helpdesk@fews.net
PIP_INDEX_URL=https://pypi.python.org/simple/

# Google API related settings
# GOOGLE_APPLICATION_CREDENTIALS = '{
#  "type": "service_account",
#  "project_id": "project_xyz",
#  "private_key_id": "4ba92314a4ac9e6e126a0e4af33f12fd7e653b59",
#  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKY...==\n-----END PRIVATE KEY-----\n",
#  "client_email": "project_xyz-service-account@project_xyz.iam.gserviceaccount.com",
#  "client_id": "660831121376634992916",
#  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
#  "token_uri": "https://oauth2.googleapis.com/token",
#  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
#  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/project_xyz/x509/project_xyz-service-account%40project_xyz.iam.gserviceaccount.com"
# }'

# Ingestion Parameters
BSS_METADATA_WORKBOOK='gdrive://Database Design/BSS Metadata'  # 15XVXFjbom1sScVXbsetnbgAnPpRux2AgNy8w5U8bXdI
BSS_METADATA_STORAGE_OPTIONS='{"token": "service_account", "access": "read_only", "creds": ${GOOGLE_APPLICATION_CREDENTIALS}, "root_file_id": "0AOJ0gJ8sjnO7Uk9PVA"}'
BSS_LABEL_RECOGNITION_WORKBOOK=./BSS_Labels.xlsx  # or 'gdrive://Database Design/BSS Labels (${ENV}).xlsx'
BSS_LABEL_RECOGNITION_STORAGE_OPTIONS='{}'  # or '{"token": "service_account", "access": "full_control", "creds": ${GOOGLE_APPLICATION_CREDENTIALS}, "root_file_id": "0AOJ0gJ8sjnO7Uk9PVA"}'
BSS_FILES_FOLDER='gdrive://Discovery Folder/Baseline Storage Sheets (BSS)'
BSS_FILES_STORAGE_OPTIONS='{"token": "service_account", "access": "read_only", "creds": ${GOOGLE_APPLICATION_CREDENTIALS}, "root_file_id": "0AOJ0gJ8sjnO7Uk9PVA"}'

# LAUNCHER can be used to configure a wrapper program around the Python process
# For example, to add ddtrace or debugpy
# Use the VSCode debugger as a launcher
# LAUNCHER = "python3 -m debugpy --listen 0.0.0.0:5679"