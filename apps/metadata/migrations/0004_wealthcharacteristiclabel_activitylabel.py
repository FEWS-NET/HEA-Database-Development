# Generated by Django 5.0.2 on 2024-02-26 06:33

import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone
import model_utils.fields
from django.db import migrations, models

import common.fields


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0008_load_classified_product"),
        ("metadata", "0003_add_season_aliases"),
    ]

    operations = [
        migrations.CreateModel(
            name="WealthCharacteristicLabel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "wealth_characteristic_label",
                    common.fields.NameField(max_length=100, unique=True, verbose_name="Wealth Characteristic Label"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        db_column="product_code",
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="wealth_characteristics",
                        to="common.classifiedproduct",
                        verbose_name="Product",
                    ),
                ),
                (
                    "unit_of_measure",
                    models.ForeignKey(
                        blank=True,
                        db_column="unit_code",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="wealth_characteristics",
                        to="common.unitofmeasure",
                        verbose_name="Unit of Measure",
                    ),
                ),
                (
                    "wealth_characteristic",
                    models.ForeignKey(
                        blank=True,
                        db_column="wealth_characteristic_code",
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="wealth_characteristics",
                        to="metadata.wealthcharacteristic",
                        verbose_name="Wealth Characteristic",
                    ),
                ),
            ],
            options={
                "verbose_name": "Wealth Characteristic Label",
                "verbose_name_plural": "Wealth Characteristics Labels",
            },
        ),
        migrations.CreateModel(
            name="ActivityLabel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                ("activity_label", common.fields.NameField(max_length=100, verbose_name="Activity Label")),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("LivelihoodActivity", "Livelihod Activity"),
                            ("OtherCashIncome", "Other Cash Income"),
                            ("WildFoods", "Wild Foods"),
                        ],
                        default="LivelihoodActivity",
                        help_text="The type of Livelihood Activity, either a general Livelihood Activity, or an Other Cash Income activity from the 'Data2' worksheet, or a Wild Foods, Fishing or Hunting activity from the 'Data3' worksheet.",
                        max_length=20,
                        verbose_name="Activity Type",
                    ),
                ),
                (
                    "is_start",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates whether this Activity Label marks the start of a new Livelihood Strategy",
                        verbose_name="Is Start?",
                    ),
                ),
                (
                    "strategy_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MilkProduction", "Milk Production"),
                            ("ButterProduction", "Butter Production"),
                            ("MeatProduction", "Meat Production"),
                            ("LivestockSale", "Livestock Sale"),
                            ("CropProduction", "Crop Production"),
                            ("FoodPurchase", "Food Purchase"),
                            ("PaymentInKind", "Payment in Kind"),
                            ("ReliefGiftOther", "Relief, Gift or Other Food"),
                            ("Hunting", "Hunting"),
                            ("Fishing", "Fishing"),
                            ("WildFoodGathering", "Wild Food Gathering"),
                            ("OtherCashIncome", "Other Cash Income"),
                            ("OtherPurchase", "Other Purchase"),
                        ],
                        help_text="The type of livelihood strategy, such as crop production, or wild food gathering.",
                        max_length=30,
                        verbose_name="Strategy Type",
                    ),
                ),
                ("season", models.CharField(blank=True, max_length=60, verbose_name="Season")),
                ("additional_identifier", models.CharField(blank=True, max_length=60, verbose_name="Season")),
                ("attribute", models.CharField(blank=True, max_length=60, verbose_name="Attribute")),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        db_column="currency_code",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.currency",
                        verbose_name="Currency",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        db_column="product_code",
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="activity_labels",
                        to="common.classifiedproduct",
                        verbose_name="Product",
                    ),
                ),
                (
                    "unit_of_measure",
                    models.ForeignKey(
                        blank=True,
                        db_column="unit_code",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="activity_labels",
                        to="common.unitofmeasure",
                        verbose_name="Unit of Measure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Activity Label",
                "verbose_name_plural": "Activity Labels",
            },
        ),
        migrations.AddConstraint(
            model_name="activitylabel",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("activity_label"),
                models.F("activity_type"),
                name="unique_lower_name_category",
            ),
        ),
    ]
