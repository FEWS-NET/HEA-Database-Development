# Luigi will interpolate values from environment variables, but raises an Exception if the environment variable is not
# defined. Therefore, any environment variable referenced in this file must be defined in the `environment` section of
# the docker-compose.yml, and possibly .gitlab-ci.yml and env.example.
[core]
# default_scheduler_url=${LUIGI_SCHEDULER_URL}
no_configure_logging=True

[scheduler]
record_task_history=True
pidfile=/usr/src/app/run/luigi.pid
state_path=/usr/src/app/run/luigi-state.pickle
retry_delay=60
# Don't retry tasks automatically. Most tasks need manual intervention to correct failures.
# Tasks that fetch data and which may be successful on subsequent attempts should specify
# the retry_count explicitly.
retry_count = 0

[worker]
keep_alive=True
ping_interval=5
# Ensure that outputs are available to downstream tasks, by failing tasks that don't appear to be complete.
# This is not the default Luigi behaviour, largely for reasons of backwards compatibility - see https://github.com/spotify/luigi/pull/2710
check_complete_on_run=True
# Don't install the shutdown handler, because it uses signal.signal and Python processes can only use signals on the
# main thread, and typically Celery is running on the main thread (using the threads pool) and starting Luigi on a
# secondary one.  We use the threads pool because running Celery with the Prefork pool prevents Luigi from lanching
# new processes ("daemonic processes are not allowed to have children") and using the Solo pool prevents Celery from
# sending heartbeats.
no_install_shutdown_handler=True

[retcode]
already_running=10
missing_data=20
not_run=25
task_failed=30
scheduling_error=35
unhandled_exception=40

#[task_history]
#db_connection = postgresql+psycopg2://${KILUIGI_USER}:${KILUIGI_PASSWORD}@${PGHOST}:${PGPORT}/${PGDATABASE}

[execution_summary]
summary_length=25

[kiluigi.targets.delegating.IntermediateTarget]
backend_class=${KILUIGI_INTERMEDIATETARGET_BACKEND_CLASS}
root_path=${KILUIGI_INTERMEDIATETARGET_ROOT_PATH}

[kiluigi.targets.delegating.FinalTarget]
backend_class=${KILUIGI_FINALTARGET_BACKEND_CLASS}
root_path=${KILUIGI_FINALTARGET_ROOT_PATH}

[google_drive]
oauth_credentials=${GOOGLE_APPLICATION_CREDENTIALS}
